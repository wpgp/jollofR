[{"path":"https://wpgp.github.io/jollofR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chibuzor Christopher Nnanatu. Author, maintainer. Somnath Chaudhuri. Author. Attila N Lazar. Author. Andrew J Tatem. Author.","code":""},{"path":"https://wpgp.github.io/jollofR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nnanatu C, Chaudhuri S, Lazar , Tatem (2025). jollofR: Bayesian statistical model-based approach disaggregating small area population estimates demographic characteristics. R package version 0.3.0, https://wpgp.github.io/jollof/, https://wpgp.github.io/jollofR/, https://github.com/wpgp/jollof.","code":"@Manual{,   title = {jollofR: A Bayesian statistical model-based approach for disaggregating small area population estimates by demographic characteristics},   author = {Chibuzor Christopher Nnanatu and Somnath Chaudhuri and Attila N Lazar and Andrew J Tatem},   year = {2025},   note = {R package version 0.3.0, https://wpgp.github.io/jollof/, https://wpgp.github.io/jollofR/},   url = {https://github.com/wpgp/jollof}, }"},{"path":"https://wpgp.github.io/jollofR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 jollofR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/boxLine.html","id":null,"dir":"Reference","previous_headings":"","what":"boxLine: Produces two graphs - boxplots of disaggregated population counts across groups and a line plot showing the mean distribution of the disaggregated counts. — boxLine","title":"boxLine: Produces two graphs - boxplots of disaggregated population counts across groups and a line plot showing the mean distribution of the disaggregated counts. — boxLine","text":"function automarically generate two graphs combined together - boxplot graph () distribution various group's disaggregated population count, (b) line graph aggregated counts across groups (e.g., total number individuals group). input data come disaggregation functions within 'jollofR' package 'cheesecake', 'cheesepop', 'slices', etc.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/boxLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"boxLine: Produces two graphs - boxplots of disaggregated population counts across groups and a line plot showing the mean distribution of the disaggregated counts. — boxLine","text":"","code":"boxLine(dmat, xlab, ylab)"},{"path":"https://wpgp.github.io/jollofR/reference/boxLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"boxLine: Produces two graphs - boxplots of disaggregated population counts across groups and a line plot showing the mean distribution of the disaggregated counts. — boxLine","text":"dmat data frame containing group-structured disaggregated population estimates observed data model estimates 'cheesecake', 'cheesepop', 'slices','spices', 'spray' , 'sprinkle', 'splash', 'spray', 'sprinkle1', 'splash1', 'spray1'. considered. xlab user-defined label x-axis (e.g., 'Frequency'). ylab user-defined label y-axis (e.g., 'Population count').","code":""},{"path":"https://wpgp.github.io/jollofR/reference/boxLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"boxLine: Produces two graphs - boxplots of disaggregated population counts across groups and a line plot showing the mean distribution of the disaggregated counts. — boxLine","text":"graphic image combined boxplot line plots population counts across groups.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/boxLine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"boxLine: Produces two graphs - boxplots of disaggregated population counts across groups and a line plot showing the mean distribution of the disaggregated counts. — boxLine","text":"","code":"data(toydata) result <- cheesecake(df = toydata$admin, output_dir = tempdir()) #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\Rtmp0GZABI already exists. #> Error in UseMethod(\"select\"): no applicable method for 'select' applied to an object of class \"NULL\" boxLine(dmat=result$male_age_pop, xlab=\"Age group (years)\", ylab = \"Population Count\") #> Error in boxLine(dmat = result$male_age_pop, xlab = \"Age group (years)\",     ylab = \"Population Count\"): could not find function \"boxLine\""},{"path":"https://wpgp.github.io/jollofR/reference/cheesecake.html","id":null,"dir":"Reference","previous_headings":"","what":"cheesecake: Population disaggregation by two-level demographic groups (eg., age and sex), with covariates — cheesecake","title":"cheesecake: Population disaggregation by two-level demographic groups (eg., age and sex), with covariates — cheesecake","text":"Used disaggregate small area population estimates age, sex, socio-demographic socio-economic characteristics (e.g., ethnicity, religion, educational level, immigration status, etc). uses statistical models predict population proportions population totals across demographic groups. Primarily designed help users filling population data gaps across demographic groups due outdated incomplete census data.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/cheesecake.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cheesecake: Population disaggregation by two-level demographic groups (eg., age and sex), with covariates — cheesecake","text":"","code":"cheesecake(df, output_dir)"},{"path":"https://wpgp.github.io/jollofR/reference/cheesecake.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cheesecake: Population disaggregation by two-level demographic groups (eg., age and sex), with covariates — cheesecake","text":"df data frame object containing sample data (often partially observed) age sex groups population data, example, well overall total population counts per administrative unit. output_dir directory name output folder disaggregated population proportions population totals automatically saved.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/cheesecake.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cheesecake: Population disaggregation by two-level demographic groups (eg., age and sex), with covariates — cheesecake","text":"list data frame objects output files including disaggregated population proportions population totals along corresponding measures uncertainties (lower upper bounds 95-percent credible intervals) demographic characteristic. addition, file containing model performance/model fit evaluation metrics also produced.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/cheesecake.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cheesecake: Population disaggregation by two-level demographic groups (eg., age and sex), with covariates — cheesecake","text":"","code":"data(toydata) result <- cheesecake(df = toydata$admin, output_dir = tempdir()) #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\Rtmp0GZABI already exists. #> Error in UseMethod(\"select\"): no applicable method for 'select' applied to an object of class \"NULL\""},{"path":"https://wpgp.github.io/jollofR/reference/cheesepop.html","id":null,"dir":"Reference","previous_headings":"","what":"cheesepop: Population disaggregation by two-level demographic groups (eg., age and sex), without covariates — cheesepop","title":"cheesepop: Population disaggregation by two-level demographic groups (eg., age and sex), without covariates — cheesepop","text":"Similar 'cheesecake' function, 'cheesepop' disaggregates small area population estimates age, sex, socio-demographic socio-economic characteristics (e.g., ethnicity, religion, educational level, immigration status, etc). However, unlike 'cheesecake' function uses geospatial covariates predict missing data values, 'cheesepop' use covariates. uses Bayesian statistical models predict population proportions population totals across demographic groups. Primarily designed help users filling population data gaps across demographic groups due outdated incomplete census data.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/cheesepop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cheesepop: Population disaggregation by two-level demographic groups (eg., age and sex), without covariates — cheesepop","text":"","code":"cheesepop(df, output_dir)"},{"path":"https://wpgp.github.io/jollofR/reference/cheesepop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cheesepop: Population disaggregation by two-level demographic groups (eg., age and sex), without covariates — cheesepop","text":"df data frame object containing sample data (often partially observed) age sex groups population data well estimated overall total counts per administrative unit. output_dir directory name output folder disaggregated population proportions population totals automatically saved.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/cheesepop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cheesepop: Population disaggregation by two-level demographic groups (eg., age and sex), without covariates — cheesepop","text":"list data frame objects output files including disaggregated population proportions population totals along corresponding measures uncertainties (lower upper bounds 95-percent credible intervals) demographic characteristic. addition, file containing model performance/model fit evaluation metrics also produced.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/cheesepop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cheesepop: Population disaggregation by two-level demographic groups (eg., age and sex), without covariates — cheesepop","text":"","code":"data(toydata) result <- cheesepop(df = toydata$admin, output_dir = tempdir()) #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\Rtmp0GZABI already exists. #> Error in UseMethod(\"select\"): no applicable method for 'select' applied to an object of class \"NULL\""},{"path":"https://wpgp.github.io/jollofR/reference/jollofR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"jollofR: A Bayesian statistical model-based approach for disaggregating small area population estimates by demographic characteristics — jollofR-package","title":"jollofR: A Bayesian statistical model-based approach for disaggregating small area population estimates by demographic characteristics — jollofR-package","text":"Automatic dis-aggregation small area population estimates demographic groups (e.g.,age, sex, race, marital status, educational level, etc) along estimates uncertainty, using advanced Bayesian statistical modelling approaches.","code":""},{"path":[]},{"path":"https://wpgp.github.io/jollofR/reference/jollofR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"jollofR: A Bayesian statistical model-based approach for disaggregating small area population estimates by demographic characteristics — jollofR-package","text":"Maintainer: Chibuzor Christopher Nnanatu cc.nnanatu@soton.ac.uk (ORCID) Authors: Somnath Chaudhuri (ORCID) Attila N Lazar (ORCID) Andrew J Tatem (ORCID)","code":""},{"path":"https://wpgp.github.io/jollofR/reference/plotHist.html","id":null,"dir":"Reference","previous_headings":"","what":"plotHist: Produces histogram of the disaggregated population counts for each group — plotHist","title":"plotHist: Produces histogram of the disaggregated population counts for each group — plotHist","text":"function produces multi-panel histogram plots disaggregated population counts group. input data can come disaggregation functions within 'jollofR' package 'cheesecake', 'cheesepop', 'slices', etc.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/plotHist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotHist: Produces histogram of the disaggregated population counts for each group — plotHist","text":"","code":"plotHist(dmat, xlab, ylab)"},{"path":"https://wpgp.github.io/jollofR/reference/plotHist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotHist: Produces histogram of the disaggregated population counts for each group — plotHist","text":"dmat data frame containing group-structured disaggregated population estimates either observed predicted 'cheesecake', 'cheesepop', 'slices','spices', 'spray' , 'sprinkle', 'splash', 'spray', 'sprinkle1', 'splash1', 'spray1'. xlab user-defined label x-axis (e.g., 'Frequency') considered. ylab user-defined label y-axis (e.g., 'Population count') considered.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/plotHist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotHist: Produces histogram of the disaggregated population counts for each group — plotHist","text":"graphic image histogram disaggregated population count","code":""},{"path":"https://wpgp.github.io/jollofR/reference/plotHist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotHist: Produces histogram of the disaggregated population counts for each group — plotHist","text":"","code":"data(toydata) result <- cheesecake(df = toydata$admin, output_dir = tempdir()) #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\Rtmp0GZABI already exists. #> Error in UseMethod(\"select\"): no applicable method for 'select' applied to an object of class \"NULL\" plotHist(dmat=result$age_pop, xlab=\"Population Count\", ylab = \"Frequency\") #> Error in plotHist(dmat = result$age_pop, xlab = \"Population Count\", ylab = \"Frequency\"): could not find function \"plotHist\""},{"path":"https://wpgp.github.io/jollofR/reference/plotRast.html","id":null,"dir":"Reference","previous_headings":"","what":"plotRast: Produces multi-panel maps of the raster files of the grid-cell disaggregated structured population counts — plotRast","title":"plotRast: Produces multi-panel maps of the raster files of the grid-cell disaggregated structured population counts — plotRast","text":"function produces multi-frame maps raster files across various demographic groups interest. input data come jolloR disaggregation functions grid cell levels, e.g.,'sprinkle', 'spray', 'splash', 'sprinkle1', 'spray1', 'splash1',","code":""},{"path":"https://wpgp.github.io/jollofR/reference/plotRast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotRast: Produces multi-panel maps of the raster files of the grid-cell disaggregated structured population counts — plotRast","text":"","code":"plotRast(output_dir, names, nrow, ncol)"},{"path":"https://wpgp.github.io/jollofR/reference/plotRast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotRast: Produces multi-panel maps of the raster files of the grid-cell disaggregated structured population counts — plotRast","text":"output_dir raster files folder directory disaggregated population estimates names user-defined names x-axis ticks labels. nrow Number rows multi-panel maps. value depends number groups displayed. ncol Number columns multi-panel maps. value depends number groups displayed.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/plotRast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotRast: Produces multi-panel maps of the raster files of the grid-cell disaggregated structured population counts — plotRast","text":"graphic image multi-panel maps population disaggregated raster files","code":""},{"path":[]},{"path":"https://wpgp.github.io/jollofR/reference/pyramid.html","id":null,"dir":"Reference","previous_headings":"","what":"pyramid: Produces population pyramid (graphs) of demographics (for cheesecake and cheesepop age-sex output data) — pyramid","title":"pyramid: Produces population pyramid (graphs) of demographics (for cheesecake and cheesepop age-sex output data) — pyramid","text":"function creates population pyramid age sex output data 'cheesecake' 'cheesepop' functions outputs. also used visualize observed age-sex compositions.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/pyramid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pyramid: Produces population pyramid (graphs) of demographics (for cheesecake and cheesepop age-sex output data) — pyramid","text":"","code":"pyramid(female_pop, male_pop)"},{"path":"https://wpgp.github.io/jollofR/reference/pyramid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pyramid: Produces population pyramid (graphs) of demographics (for cheesecake and cheesepop age-sex output data) — pyramid","text":"female_pop data frame containing disaggregated population estimates females across ages groups. male_pop data frame containing disaggregated population estimates males across ages groups.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/pyramid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pyramid: Produces population pyramid (graphs) of demographics (for cheesecake and cheesepop age-sex output data) — pyramid","text":"graphic image age-sex population distribution pyramid","code":""},{"path":"https://wpgp.github.io/jollofR/reference/pyramid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pyramid: Produces population pyramid (graphs) of demographics (for cheesecake and cheesepop age-sex output data) — pyramid","text":"","code":"data(toydata) result <- cheesecake(df = toydata$admin, output_dir = tempdir()) #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\Rtmp0GZABI already exists. #> Error in UseMethod(\"select\"): no applicable method for 'select' applied to an object of class \"NULL\" pyramid(result$fem_age_pop,result$male_age_pop) #> Error: object 'result' not found"},{"path":"https://wpgp.github.io/jollofR/reference/slices.html","id":null,"dir":"Reference","previous_headings":"","what":"slices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) - without covariates. Please use 'spices' if you want covariates included. — slices","title":"slices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) - without covariates. Please use 'spices' if you want covariates included. — slices","text":"function disaggregates population estimates single demographic (age sex religion, etc)","code":""},{"path":"https://wpgp.github.io/jollofR/reference/slices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"slices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) - without covariates. Please use 'spices' if you want covariates included. — slices","text":"","code":"slices(df, output_dir, class)"},{"path":"https://wpgp.github.io/jollofR/reference/slices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"slices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) - without covariates. Please use 'spices' if you want covariates included. — slices","text":"df data frame object containing sample data (often partially observed) age sex groups population data well estimated overall total counts per administrative unit. output_dir directory name output folder disaggregated population proportions population totals automatically saved. class categories variables interest. example, educational level, 'education', 'primary education', 'secondary education', 'tertiary education'.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/slices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"slices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) - without covariates. Please use 'spices' if you want covariates included. — slices","text":"list data frame objects output files including disaggregated population proportions population totals along corresponding measures uncertainties (lower upper bounds 95-percent credible intervals) demographic characteristic. addition, file containing model performance/model fit evaluation metrics also produced.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/slices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"slices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) - without covariates. Please use 'spices' if you want covariates included. — slices","text":"","code":"if (FALSE) data(toydata) classes <- names(toydata$admin %>% dplyr::select(starts_with(\"age_\"))) #> Error in toydata$admin %>% dplyr::select(starts_with(\"age_\")): could not find function \"%>%\" result2 <- slices(df = toydata$admin, output_dir = tempdir(), class = classes) # \\dontrun{} #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\Rtmp0GZABI already exists. #> Error: object 'classes' not found"},{"path":"https://wpgp.github.io/jollofR/reference/spices.html","id":null,"dir":"Reference","previous_headings":"","what":"spices: Disaggregates population counts for a single level of demographics (e.g., age groups only or sex group only) with covariates. — spices","title":"spices: Disaggregates population counts for a single level of demographics (e.g., age groups only or sex group only) with covariates. — spices","text":"function disaggregates population estimates single demographic (age sex religion, etc)","code":""},{"path":"https://wpgp.github.io/jollofR/reference/spices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spices: Disaggregates population counts for a single level of demographics (e.g., age groups only or sex group only) with covariates. — spices","text":"","code":"spices(df, output_dir, class)"},{"path":"https://wpgp.github.io/jollofR/reference/spices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spices: Disaggregates population counts for a single level of demographics (e.g., age groups only or sex group only) with covariates. — spices","text":"df data frame object containing sample data (often partially observed) age sex groups population data well estimated overall total counts per administrative unit. output_dir directory name output folder disaggregated population proportions population totals automatically saved. class categories variables interest. example, educational level, 'education', 'primary education', 'secondary education', 'tertiary education'.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/spices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spices: Disaggregates population counts for a single level of demographics (e.g., age groups only or sex group only) with covariates. — spices","text":"list data frame objects output files including disaggregated population proportions population totals along corresponding measures uncertainties (lower upper bounds 95-percent credible intervals) demographic characteristic. addition, file containing model performance/model fit evaluation metrics also produced.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/spices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spices: Disaggregates population counts for a single level of demographics (e.g., age groups only or sex group only) with covariates. — spices","text":"","code":"if (FALSE) data(toydata) classes <- names(toydata$admin %>% dplyr::select(starts_with(\"age_\"))) #> Error in toydata$admin %>% dplyr::select(starts_with(\"age_\")): could not find function \"%>%\" result2 <- spices(df = toydata$admin, output_dir = tempdir(), class = classes) # \\dontrun{} #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\Rtmp0GZABI already exists. #> Error: object 'classes' not found"},{"path":"https://wpgp.github.io/jollofR/reference/splash.html","id":null,"dir":"Reference","previous_headings":"","what":"splash: Disaggregates population counts at high-resolution grid cells using building counts values of grid cells as a weighting layer. It is used for two-level disaggregation. — splash","title":"splash: Disaggregates population counts at high-resolution grid cells using building counts values of grid cells as a weighting layer. It is used for two-level disaggregation. — splash","text":"function disaggregates population estimates grid cell levels using building counts grid cell first disaggregate admin unit's total population across grid cells. , grid cell's total count disaggregated groups interest using admin's proportions.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/splash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"splash: Disaggregates population counts at high-resolution grid cells using building counts values of grid cells as a weighting layer. It is used for two-level disaggregation. — splash","text":"","code":"splash(df, rdf, rclass, output_dir)"},{"path":"https://wpgp.github.io/jollofR/reference/splash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"splash: Disaggregates population counts at high-resolution grid cells using building counts values of grid cells as a weighting layer. It is used for two-level disaggregation. — splash","text":"df data frame object containing sample data (often partially observed) different demographic groups population. contains admin's total populatioin count disaggregated well key variables defined within 'toydata'. rdf gridded data frame object containing key information grid cells. Variables include admin_id must identical one admin level data. contains GPS coordinates. .e, longitude (lon) Latitude (lat) grid cell's centroids. rclass user-defined names files saved output folder. output_dir directory name output folder disaggregated population proportions population totals automatically saved.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/splash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"splash: Disaggregates population counts at high-resolution grid cells using building counts values of grid cells as a weighting layer. It is used for two-level disaggregation. — splash","text":"list data frame objects output files including disaggregated population proportions population totals along corresponding measures uncertainties (lower upper bounds 95-percent credible intervals) demographic characteristic. addition, file containing model performance/model fit evaluation metrics also produced.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/splash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"splash: Disaggregates population counts at high-resolution grid cells using building counts values of grid cells as a weighting layer. It is used for two-level disaggregation. — splash","text":"","code":"# run cheesepop data(toydata) result <- cheesepop(df = toydata$admin,output_dir = tempdir()) #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\Rtmp0GZABI already exists. #> Error in UseMethod(\"select\"): no applicable method for 'select' applied to an object of class \"NULL\" rclass <- paste0(\"TOY_population_v1_0_age\",1:12) # Mean result2 <- splash(df = result$full_data, rdf = toydata$grid, rclass, output_dir = tempdir()) #> Error in splash(df = result$full_data, rdf = toydata$grid, rclass, output_dir = tempdir()): could not find function \"splash\" ras2<- raster(paste0(output_dir = tempdir(), \"/pop_TOY_population_v1_0_age4.tif\")) #> Error in raster(paste0(output_dir = tempdir(), \"/pop_TOY_population_v1_0_age4.tif\")): could not find function \"raster\""},{"path":"https://wpgp.github.io/jollofR/reference/splash1.html","id":null,"dir":"Reference","previous_headings":"","what":"splash1: Disaggregates population counts at high-resolution grid cells using building counts values of grid cells as a weighting layer. However, unlike 'splash' it is used for 0ne-level disaggregation. — splash1","title":"splash1: Disaggregates population counts at high-resolution grid cells using building counts values of grid cells as a weighting layer. However, unlike 'splash' it is used for 0ne-level disaggregation. — splash1","text":"function disaggregates population estimates grid cell levels one level classification . uses building counts grid cell first disaggregate admin unit's total population across grid cells. , grid cell's total count disaggregated groups interest using admin's proportions.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/splash1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"splash1: Disaggregates population counts at high-resolution grid cells using building counts values of grid cells as a weighting layer. However, unlike 'splash' it is used for 0ne-level disaggregation. — splash1","text":"","code":"splash1(df, rdf, class, rclass, output_dir)"},{"path":"https://wpgp.github.io/jollofR/reference/splash1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"splash1: Disaggregates population counts at high-resolution grid cells using building counts values of grid cells as a weighting layer. However, unlike 'splash' it is used for 0ne-level disaggregation. — splash1","text":"df data frame object containing sample data (often partially observed) different demographic groups population. contains admin's total populatioin count disaggregated well key variables defined within 'toydata'. rdf gridded data frame object containing key information grid cells. Variables include admin_id must identical one admin level data. contains GPS coordinates. .e, longitude (lon) Latitude (lat) grid cell's centroids. class categories variables interest. example, educational level, 'education', 'primary education', 'secondary education', 'tertiary education'. rclass user-defined names files saved output folder. output_dir directory name output folder disaggregated population proportions population totals automatically saved.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/splash1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"splash1: Disaggregates population counts at high-resolution grid cells using building counts values of grid cells as a weighting layer. However, unlike 'splash' it is used for 0ne-level disaggregation. — splash1","text":"list data frame objects output files including disaggregated population proportions population totals along corresponding measures uncertainties (lower upper bounds 95-percent credible intervals) demographic characteristic. addition, file containing model performance/model fit evaluation metrics also produced.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/splash1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"splash1: Disaggregates population counts at high-resolution grid cells using building counts values of grid cells as a weighting layer. However, unlike 'splash' it is used for 0ne-level disaggregation. — splash1","text":"","code":"data(toydata) result <- cheesepop(df = toydata$admin,output_dir = tempdir()) # run cheesepop #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\Rtmp0GZABI already exists. #> Error in UseMethod(\"select\"): no applicable method for 'select' applied to an object of class \"NULL\"  rclass <- paste0(\"TOY_population_v1_0_age\",1:12) # Mean class <- names(toydata$admin %>% dplyr::select(starts_with(\"age_\"))) #> Error in toydata$admin %>% dplyr::select(starts_with(\"age_\")): could not find function \"%>%\" result2 <- splash1(df = result$full_data, rdf = toydata$grid, class, rclass, output_dir = tempdir()) #> Error in splash1(df = result$full_data, rdf = toydata$grid, class, rclass,     output_dir = tempdir()): could not find function \"splash1\" ras2<- raster(paste0(output_dir = tempdir(), \"/pop_TOY_population_v1_0_age4.tif\")) #> Error in raster(paste0(output_dir = tempdir(), \"/pop_TOY_population_v1_0_age4.tif\")): could not find function \"raster\""},{"path":"https://wpgp.github.io/jollofR/reference/spray.html","id":null,"dir":"Reference","previous_headings":"","what":"Spray: Disaggregates population counts by dividing the admin total by the number of grid cells within the administrative units. Then admin proportions are used to further disaggregate the grid cell totals by groups. — spray","title":"Spray: Disaggregates population counts by dividing the admin total by the number of grid cells within the administrative units. Then admin proportions are used to further disaggregate the grid cell totals by groups. — spray","text":"function disaggregates population estimates grid cell levels information building population counts.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/spray.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spray: Disaggregates population counts by dividing the admin total by the number of grid cells within the administrative units. Then admin proportions are used to further disaggregate the grid cell totals by groups. — spray","text":"","code":"spray(df, rdf, rclass, output_dir)"},{"path":"https://wpgp.github.io/jollofR/reference/spray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spray: Disaggregates population counts by dividing the admin total by the number of grid cells within the administrative units. Then admin proportions are used to further disaggregate the grid cell totals by groups. — spray","text":"df data frame object containing sample data (often partially observed) different demographic groups population. contains admin's total populatioin count disaggregated well key variables defined within 'toydata'. rdf gridded data frame object containing key information grid cells. Variables include admin_id must identical one admin level data. contains GPS coordinates. .e, longitude (lon) Latitude (lat) grid cell's centroids. rclass user-defined names files saved output folder. output_dir directory name output folder disaggregated population proportions population totals automatically saved. class categories variables interest. example, educational level, 'education', 'primary education', 'secondary education', 'tertiary education'.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/spray.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spray: Disaggregates population counts by dividing the admin total by the number of grid cells within the administrative units. Then admin proportions are used to further disaggregate the grid cell totals by groups. — spray","text":"list data frame objects output files including disaggregated population proportions population totals along corresponding measures uncertainties (lower upper bounds 95-percent credible intervals) demographic characteristic. addition, file containing model performance/model fit evaluation metrics also produced.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/spray.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spray: Disaggregates population counts by dividing the admin total by the number of grid cells within the administrative units. Then admin proportions are used to further disaggregate the grid cell totals by groups. — spray","text":"","code":"data(toydata) result <- cheesepop(df = toydata$admin,output_dir = tempdir()) # run cheesepop #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\Rtmp0GZABI already exists. #> Error in UseMethod(\"select\"): no applicable method for 'select' applied to an object of class \"NULL\"  rclass <- paste0(\"TOY_population_v1_0_age\",1:12) # Mean result2 <- spray(df = result$full_data, rdf = toydata$grid, rclass, output_dir = tempdir()) #> Error in spray(df = result$full_data, rdf = toydata$grid, rclass, output_dir = tempdir()): could not find function \"spray\" ras2<- raster(paste0(output_dir = tempdir(), \"/pop_TOY_population_v1_0_age4.tif\")) #> Error in raster(paste0(output_dir = tempdir(), \"/pop_TOY_population_v1_0_age4.tif\")): could not find function \"raster\""},{"path":"https://wpgp.github.io/jollofR/reference/spray1.html","id":null,"dir":"Reference","previous_headings":"","what":"spray1: Disaggregates population counts at high-resolution grid cells in the absence population and building counts - for one-level only — spray1","title":"spray1: Disaggregates population counts at high-resolution grid cells in the absence population and building counts - for one-level only — spray1","text":"function disaggregates population estimates grid cell levels using building counts grid cell first disaggregate admin unit's total population across grid cells. , grid cell's total count disaggregated groups interest using admin's proportions.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/spray1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spray1: Disaggregates population counts at high-resolution grid cells in the absence population and building counts - for one-level only — spray1","text":"","code":"spray1(df, rdf, class, rclass, output_dir)"},{"path":"https://wpgp.github.io/jollofR/reference/spray1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spray1: Disaggregates population counts at high-resolution grid cells in the absence population and building counts - for one-level only — spray1","text":"df data frame object containing sample data (often partially observed) different demographic groups population. contains admin's total populatioin count disaggregated well key variables defined within 'toydata'. rdf gridded data frame object containing key information grid cells. Variables include admin_id must identical one admin level data. contains GPS coordinates. .e, longitude (lon) Latitude (lat) grid cell's centroids. class categories variables interest. example, educational level, 'education', 'primary education', 'secondary education', 'tertiary education'. rclass user-defined names files saved output folder. output_dir directory name output folder disaggregated population proportions population totals automatically saved.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/spray1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spray1: Disaggregates population counts at high-resolution grid cells in the absence population and building counts - for one-level only — spray1","text":"list data frame objects output files including disaggregated population proportions population totals along corresponding measures uncertainties (lower upper bounds 95-percent credible intervals) demographic characteristic. addition, file containing model performance/model fit evaluation metrics also produced.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/spray1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spray1: Disaggregates population counts at high-resolution grid cells in the absence population and building counts - for one-level only — spray1","text":"","code":"data(toydata) result <- cheesepop(df = toydata$admin,output_dir = tempdir()) # run cheesepop #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\Rtmp0GZABI already exists. #> Error in UseMethod(\"select\"): no applicable method for 'select' applied to an object of class \"NULL\"  rclass <- paste0(\"TOY_population_v1_0_age\",1:12) # Mean class <- names(toydata$admin %>% dplyr::select(starts_with(\"age_\"))) #> Error in toydata$admin %>% dplyr::select(starts_with(\"age_\")): could not find function \"%>%\" result2 <- spray(df = result$full_data, rdf = toydata$grid, class, rclass, output_dir = tempdir()) #> Error in spray(df = result$full_data, rdf = toydata$grid, class, rclass,     output_dir = tempdir()): could not find function \"spray\" ras2<- raster(paste0(output_dir = tempdir(), \"/pop_TOY_population_v1_0_age4.tif\")) #> Error in raster(paste0(output_dir = tempdir(), \"/pop_TOY_population_v1_0_age4.tif\")): could not find function \"raster\""},{"path":"https://wpgp.github.io/jollofR/reference/sprinkle.html","id":null,"dir":"Reference","previous_headings":"","what":"sprinkle: Disaggregates population counts at high-resolution grid cells using the grid cell's total population counts. Note that this could also be applied to more than two levels scenarios. — sprinkle","title":"sprinkle: Disaggregates population counts at high-resolution grid cells using the grid cell's total population counts. Note that this could also be applied to more than two levels scenarios. — sprinkle","text":"function disaggregates population estimates grid cell levels using population counts grid cell.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/sprinkle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sprinkle: Disaggregates population counts at high-resolution grid cells using the grid cell's total population counts. Note that this could also be applied to more than two levels scenarios. — sprinkle","text":"","code":"sprinkle(df, rdf, rclass, output_dir)"},{"path":"https://wpgp.github.io/jollofR/reference/sprinkle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sprinkle: Disaggregates population counts at high-resolution grid cells using the grid cell's total population counts. Note that this could also be applied to more than two levels scenarios. — sprinkle","text":"df data frame object containing sample data (often partially observed) different demographic groups population. contains admin's total populatioin count disaggregated well key variables defined within 'toydata'. rdf gridded data frame object containing key information grid cells. Variables include admin_id must identical one admin level data. contains GPS coordinates. .e, longitude (lon) Latitude (lat) grid cell's centroids. rclass user-defined names files saved output folder. output_dir directory name output folder disaggregated population proportions population totals automatically saved.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/sprinkle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sprinkle: Disaggregates population counts at high-resolution grid cells using the grid cell's total population counts. Note that this could also be applied to more than two levels scenarios. — sprinkle","text":"list data frame objects output files including disaggregated population proportions population totals along corresponding measures uncertainties (lower upper bounds 95-percent credible intervals) demographic characteristic. addition, file containing model performance/model fit evaluation metrics also produced.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/sprinkle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sprinkle: Disaggregates population counts at high-resolution grid cells using the grid cell's total population counts. Note that this could also be applied to more than two levels scenarios. — sprinkle","text":"","code":"data(toydata) result <- cheesepop(df = toydata$admin,output_dir = tempdir()) # run cheesepop #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\Rtmp0GZABI already exists. #> Error in UseMethod(\"select\"): no applicable method for 'select' applied to an object of class \"NULL\"  rclass <- paste0(\"TOY_population_v1_0_age\",1:12) # Mean result2 <- spray(df = result$full_data, rdf = toydata$grid, rclass, output_dir = tempdir()) #> Error in spray(df = result$full_data, rdf = toydata$grid, rclass, output_dir = tempdir()): could not find function \"spray\" ras2<- raster(paste0(output_dir = tempdir(), \"/pop_TOY_population_v1_0_age4.tif\")) #> Error in raster(paste0(output_dir = tempdir(), \"/pop_TOY_population_v1_0_age4.tif\")): could not find function \"raster\""},{"path":"https://wpgp.github.io/jollofR/reference/sprinkle1.html","id":null,"dir":"Reference","previous_headings":"","what":"sprinkle1: Disaggregates population counts at high-resolution grid cells using the grid's total population. This can also be applied to one-level disaggregation. — sprinkle1","title":"sprinkle1: Disaggregates population counts at high-resolution grid cells using the grid's total population. This can also be applied to one-level disaggregation. — sprinkle1","text":"function disaggregates population estimates grid cell levels using population counts grid cell.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/sprinkle1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sprinkle1: Disaggregates population counts at high-resolution grid cells using the grid's total population. This can also be applied to one-level disaggregation. — sprinkle1","text":"","code":"sprinkle1(df, rdf, class, rclass, output_dir)"},{"path":"https://wpgp.github.io/jollofR/reference/sprinkle1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sprinkle1: Disaggregates population counts at high-resolution grid cells using the grid's total population. This can also be applied to one-level disaggregation. — sprinkle1","text":"df data frame object containing sample data (often partially observed) different demographic groups population. contains admin's total populatioin count disaggregated well key variables defined within 'toydata'. rdf gridded data frame object containing key information grid cells. Variables include admin_id must identical one admin level data. contains GPS coordinates. .e, longitude (lon) Latitude (lat) grid cell's centroids. class categories variables interest. example, educational level, 'education', ' primary education', 'secondary education', 'tertiary education'. rclass user-defined names files saved output folder. output_dir directory name output folder disaggregated population proportions population totals automatically saved.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/sprinkle1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sprinkle1: Disaggregates population counts at high-resolution grid cells using the grid's total population. This can also be applied to one-level disaggregation. — sprinkle1","text":"list data frame objects output files including disaggregated population proportions population totals along corresponding measures uncertainties (lower upper bounds 95-percent credible intervals) demographic characteristic. addition, file containing model performance/model fit evaluation metrics also produced.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/sprinkle1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sprinkle1: Disaggregates population counts at high-resolution grid cells using the grid's total population. This can also be applied to one-level disaggregation. — sprinkle1","text":"","code":"data(toydata) result <- cheesepop(df = toydata$admin,output_dir = tempdir()) # run cheesepop #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\Rtmp0GZABI already exists. #> Error in UseMethod(\"select\"): no applicable method for 'select' applied to an object of class \"NULL\"  rclass <- paste0(\"TOY_population_v1_0_age\",1:12) # Mean result2 <- sprinkle1(df = result$full_data, rdf = toydata$grid, rclass, output_dir = tempdir()) #> Error in sprinkle1(df = result$full_data, rdf = toydata$grid, rclass,     output_dir = tempdir()): could not find function \"sprinkle1\" ras2<- raster(paste0(output_dir = tempdir(), \"/pop_TOY_population_v1_0_age4.tif\")) #> Error in raster(paste0(output_dir = tempdir(), \"/pop_TOY_population_v1_0_age4.tif\")): could not find function \"raster\""},{"path":"https://wpgp.github.io/jollofR/reference/toydata.html","id":null,"dir":"Reference","previous_headings":"","what":"A list object containing two dataframes - an administrative-level dataset (admin) containing partially observed age-sex structured data, and a grid-cell level dataset (grid) for population disaggregation at 1km by 1km grid cells. — toydata","title":"A list object containing two dataframes - an administrative-level dataset (admin) containing partially observed age-sex structured data, and a grid-cell level dataset (grid) for population disaggregation at 1km by 1km grid cells. — toydata","text":"Artificially generated toy datasets come cross-sectional format. 'admin' data dataframe collated administrative unit level contains information observed number individuals per age sex groups within administrative unit. Key variables include administrative unit identifier (admin_id), admin total population disaggregated (total), total number buildings within admin unit (bld), longitude (lon) latitude (lat). 'admin' data provides artificial information 900 spatially distinct administrative units individuals population grouped 12 mutually exclusive exhaustive age groups. age groups grouped 'male' 'female' groups. data contains total population counts (total) spatial unit also contains missing age sex groups population counts. model first predicts population proportions missing data disaggregates population totals using predicted proportions obtain predicted population counts age sex groups. Note applies demographic groups marital status, race, etc.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/toydata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list object containing two dataframes - an administrative-level dataset (admin) containing partially observed age-sex structured data, and a grid-cell level dataset (grid) for population disaggregation at 1km by 1km grid cells. — toydata","text":"","code":"data(toydata)"},{"path":"https://wpgp.github.io/jollofR/reference/toydata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list object containing two dataframes - an administrative-level dataset (admin) containing partially observed age-sex structured data, and a grid-cell level dataset (grid) for population disaggregation at 1km by 1km grid cells. — toydata","text":"object class \"list\" admin_id Available 'admin' 'grid' datasets. numerical value serves administrative units unique identifier. match perfectly 'admin' grid' datasets grd_id Available 'grid' dataset . numerical value serves grid cell unique indentifier. x1,x2,x3 samples geospatial covariates (required 'cheesecake' 'slices' functions). Note covariates identified significantly predict population distribution among demographic groups. package allows user include number covariates datasets. total Available 'admin' 'grid' datasets. provides estimates total population counts disaggregated. necessarily rowsum age groups totals. bld Available 'admin' 'grid' datasets. provides total number buildings grid cell administrative unit. age_1, ..., age_12 correspond partially fully observed number people age group. Note 12 age groups used illustration purposes,however, package can accommodate number age sex demographic groups. fage_1, ..., fage_12 correspond partially fully observed number females corresponding age groups. Note 12 age groups used illustration purposes,however, package can accommodate number age sex demographic groups. mage_1, ..., mage_12 correspond partially fully observed number males corresponding age groups. Note 12 age groups used illustration purposes,however, package can accommodate number age sex demographic groups. lon Available 'admin' 'grid' datasets. Provides value longitude centroids grid cells admin unit polygons. lat Available 'admin' 'grid' datasets. Provides value latitude centroids grid cells admin unit polygons.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/toydata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A list object containing two dataframes - an administrative-level dataset (admin) containing partially observed age-sex structured data, and a grid-cell level dataset (grid) for population disaggregation at 1km by 1km grid cells. — toydata","text":"second dataset toydata list 'grid' data allows prediction age-sex structures 1km 1km grid cells (note population predictions can made spatial resolution interest). 'grid' data  contains six key variables. administrative unit identifier (admin_id) must identical 'admin' data; grid cell identifier (grd_id); total number people per grid cell (total), available; total number buildings per grid cell (bld), available; longitude (lon) latitude (lat) variables grid cell centroids. illustrate use package.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/toydata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A list object containing two dataframes - an administrative-level dataset (admin) containing partially observed age-sex structured data, and a grid-cell level dataset (grid) for population disaggregation at 1km by 1km grid cells. — toydata","text":"data set artificially created purpose illustrations within jollofR package.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/toydata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A list object containing two dataframes - an administrative-level dataset (admin) containing partially observed age-sex structured data, and a grid-cell level dataset (grid) for population disaggregation at 1km by 1km grid cells. — toydata","text":"","code":"data(toydata) head(toydata$admin) #> NULL head(toydata$grid) #> NULL"},{"path":"https://wpgp.github.io/jollofR/news/index.html","id":"jollofr-030","dir":"Changelog","previous_headings":"","what":"jollofR 0.3.0","title":"jollofR 0.3.0","text":"Initial CRAN submission.","code":""}]
