[{"path":"https://wpgp.github.io/jollofR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chibuzor Christopher Nnanatu. Author, maintainer. Somnath Chaudhuri. Author. Attila N Lazar. Author. Andrew J Tatem. Author.","code":""},{"path":"https://wpgp.github.io/jollofR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nnanatu C, Chaudhuri S, Lazar , Tatem (2025). jollofR: Bayesian statistical model-based approach disaggregating small area population estimates demographic characteristics. R package version 0.3.0, https://wpgp.github.io/jollof/, https://wpgp.github.io/jollofR/, https://github.com/wpgp/jollof.","code":"@Manual{,   title = {jollofR: A Bayesian statistical model-based approach for disaggregating small area population estimates by demographic characteristics},   author = {Chibuzor Christopher Nnanatu and Somnath Chaudhuri and Attila N Lazar and Andrew J Tatem},   year = {2025},   note = {R package version 0.3.0, https://wpgp.github.io/jollof/, https://wpgp.github.io/jollofR/},   url = {https://github.com/wpgp/jollof}, }"},{"path":"https://wpgp.github.io/jollofR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 jollofR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/cheesecake.html","id":null,"dir":"Reference","previous_headings":"","what":"cheesecake — cheesecake","title":"cheesecake — cheesecake","text":"Used disaggregate small area population estimates age, sex, socio-demographic socio-economic characteristics (e.g., ethnicity, religion, educational level, immigration status, etc). uses statistical models predict population proportions population totals across demographic groups. Primarily designed help users filling population data gaps across demographic groups due outdated incomplete census.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/cheesecake.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cheesecake — cheesecake","text":"","code":"cheesecake(df, output_dir)"},{"path":"https://wpgp.github.io/jollofR/reference/cheesecake.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cheesecake — cheesecake","text":"df data frame object containing sample data (often partially observed) age sex groups population data well estimated overall total counts per administrative unit. output_dir directory name output folder disaggregated population proportions population totals automatically saved.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/cheesecake.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cheesecake — cheesecake","text":"list data frame objects output files including disaggregated population proportions population totals along corresponding measures uncertainties (lower upper bounds 95-percent credible intervals) demographic characteristic. addition, file containing model performance/model fit evaluation metrics also produced.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/cheesecake.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cheesecake — cheesecake","text":"","code":"data(toydata) result <- cheesecake(df = toydata, output_dir = tempdir()) #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\RtmpA12aiY already exists. #> [1] \"(1) age_1 model is running\" #> [1] \"(2) age_2 model is running\" #> [1] \"(3) age_3 model is running\" #> [1] \"(4) age_4 model is running\" #> [1] \"(5) age_5 model is running\" #> [1] \"(6) age_6 model is running\" #> [1] \"(7) age_7 model is running\" #> [1] \"(8) age_8 model is running\" #> [1] \"(9) age_9 model is running\" #> [1] \"(10) age_10 model is running\" #> [1] \"(11) age_11 model is running\" #> [1] \"(12) age_12 model is running\" #>           MAE       MAPE     RMSE corr #> [1,] 1.002179 0.02859478 1.431711    1"},{"path":"https://wpgp.github.io/jollofR/reference/cheesepop.html","id":null,"dir":"Reference","previous_headings":"","what":"cheesepop — cheesepop","title":"cheesepop — cheesepop","text":"Similar 'cheesecake' function, 'cheesepop' disaggregates small area population estimates age, sex, socio-demographic socio-economic characteristics (e.g., ethnicity, religion, educational level, immigration status, etc). However, unlike 'cheesecake' function uses geospatial covariates predict missing data values, 'cheesepop' use covariates. uses Bayesian statistical models predict population proportions population totals across demographic groups. Primarily designed help users filling population data gaps across demographic groups due outdated incomplete census.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/cheesepop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cheesepop — cheesepop","text":"","code":"cheesepop(df, output_dir)"},{"path":"https://wpgp.github.io/jollofR/reference/cheesepop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cheesepop — cheesepop","text":"df data frame object containing sample data (often partially observed) age sex groups population data well estimated overall total counts per administrative unit. output_dir directory name output folder disaggregated population proportions population totals automatically saved.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/cheesepop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cheesepop — cheesepop","text":"list data frame objects output files including disaggregated population proportions population totals along corresponding measures uncertainties (lower upper bounds 95-percent credible intervals) demographic characteristic. addition, file containing model performance/model fit evaluation metrics also produced.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/cheesepop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cheesepop — cheesepop","text":"","code":"data(toydata) result <- cheesepop(df = toydata, output_dir = tempdir()) #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\RtmpA12aiY already exists. #> [1] \"(1) age_1 model is running\" #> [1] \"(2) age_2 model is running\" #> [1] \"(3) age_3 model is running\" #> [1] \"(4) age_4 model is running\" #> [1] \"(5) age_5 model is running\" #> [1] \"(6) age_6 model is running\" #> [1] \"(7) age_7 model is running\" #> [1] \"(8) age_8 model is running\" #> [1] \"(9) age_9 model is running\" #> [1] \"(10) age_10 model is running\" #> [1] \"(11) age_11 model is running\" #> [1] \"(12) age_12 model is running\" #>            MAE       MAPE     RMSE corr #> [1,] 0.8179272 0.02770804 1.160615    1"},{"path":"https://wpgp.github.io/jollofR/reference/jollofR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"jollofR: A Bayesian statistical model-based approach for disaggregating small area population estimates by demographic characteristics — jollofR-package","title":"jollofR: A Bayesian statistical model-based approach for disaggregating small area population estimates by demographic characteristics — jollofR-package","text":"Automatic dis-aggregation small area population estimates demographic groups (e.g.,age, sex, race, marital status, educational level, etc) along estimates uncertainty, using advanced Bayesian statistical modelling approaches.","code":""},{"path":[]},{"path":"https://wpgp.github.io/jollofR/reference/jollofR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"jollofR: A Bayesian statistical model-based approach for disaggregating small area population estimates by demographic characteristics — jollofR-package","text":"Maintainer: Chibuzor Christopher Nnanatu cc.nnanatu@soton.ac.uk (ORCID) Authors: Somnath Chaudhuri (ORCID) Attila N Lazar (ORCID) Andrew J Tatem (ORCID)","code":""},{"path":"https://wpgp.github.io/jollofR/reference/pyramid.html","id":null,"dir":"Reference","previous_headings":"","what":"pyramid: making population pyramid of demographics (for cheesecake and cheesepop age-sex output data) — pyramid","title":"pyramid: making population pyramid of demographics (for cheesecake and cheesepop age-sex output data) — pyramid","text":"function creates population pyramid based outputs 'cheesecake' 'cheesepop' functions.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/pyramid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pyramid: making population pyramid of demographics (for cheesecake and cheesepop age-sex output data) — pyramid","text":"","code":"pyramid(female_pop, male_pop)"},{"path":"https://wpgp.github.io/jollofR/reference/pyramid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pyramid: making population pyramid of demographics (for cheesecake and cheesepop age-sex output data) — pyramid","text":"female_pop data frame containing disaggregated population estimates females across ages groups. considered. male_pop data frame containing disaggregated population estimates males across ages groups. considered.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/pyramid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pyramid: making population pyramid of demographics (for cheesecake and cheesepop age-sex output data) — pyramid","text":"graphic image age-sex population distribution pyramid","code":""},{"path":"https://wpgp.github.io/jollofR/reference/pyramid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pyramid: making population pyramid of demographics (for cheesecake and cheesepop age-sex output data) — pyramid","text":"","code":"data(toydata) result <- cheesecake(df = toydata, output_dir = tempdir()) #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\RtmpA12aiY already exists. #> [1] \"(1) age_1 model is running\" #> [1] \"(2) age_2 model is running\" #> [1] \"(3) age_3 model is running\" #> [1] \"(4) age_4 model is running\" #> [1] \"(5) age_5 model is running\" #> [1] \"(6) age_6 model is running\" #> [1] \"(7) age_7 model is running\" #> [1] \"(8) age_8 model is running\" #> [1] \"(9) age_9 model is running\" #> [1] \"(10) age_10 model is running\" #> [1] \"(11) age_11 model is running\" #> [1] \"(12) age_12 model is running\" #>          MAE       MAPE    RMSE corr #> [1,] 1.00249 0.02859851 1.43182    1 pyramid(result$fem_age_pop,result$male_age_pop)"},{"path":"https://wpgp.github.io/jollofR/reference/slices.html","id":null,"dir":"Reference","previous_headings":"","what":"slices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) - no geospatial covariates. Please use 'spices' if you want covariates used. — slices","title":"slices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) - no geospatial covariates. Please use 'spices' if you want covariates used. — slices","text":"function disaggregates population estimates single demographic (age sex religion, etc)","code":""},{"path":"https://wpgp.github.io/jollofR/reference/slices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"slices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) - no geospatial covariates. Please use 'spices' if you want covariates used. — slices","text":"","code":"slices(df, output_dir, class)"},{"path":"https://wpgp.github.io/jollofR/reference/slices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"slices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) - no geospatial covariates. Please use 'spices' if you want covariates used. — slices","text":"df data frame object containing sample data (often partially observed) age sex groups population data well estimated overall total counts per administrative unit. output_dir directory name output folder disaggregated population proportions population totals automatically saved. class categories variables interest. example, educational level, 'education', 'primary education', 'secondary education', 'tertiary education'.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/slices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"slices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) - no geospatial covariates. Please use 'spices' if you want covariates used. — slices","text":"list data frame objects output files including disaggregated population proportions population totals along corresponding measures uncertainties (lower upper bounds 95-percent credible intervals) demographic characteristic. addition, file containing model performance/model fit evaluation metrics also produced.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/slices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"slices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) - no geospatial covariates. Please use 'spices' if you want covariates used. — slices","text":"","code":"if (FALSE) data(toydata) classes <- names(toydata %>% dplyr::select(starts_with(\"age_\"))) #> Error in toydata %>% dplyr::select(starts_with(\"age_\")): could not find function \"%>%\" result2 <- slices(df = toydata, output_dir = tempdir(), class = classes) # \\dontrun{} #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\RtmpA12aiY already exists. #> Error: object 'classes' not found"},{"path":"https://wpgp.github.io/jollofR/reference/spices.html","id":null,"dir":"Reference","previous_headings":"","what":"spices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) with geospatial covariates. — spices","title":"spices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) with geospatial covariates. — spices","text":"function disaggregates population estimates single demographic (age sex religion, etc)","code":""},{"path":"https://wpgp.github.io/jollofR/reference/spices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) with geospatial covariates. — spices","text":"","code":"spices(df, output_dir, class)"},{"path":"https://wpgp.github.io/jollofR/reference/spices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) with geospatial covariates. — spices","text":"df data frame object containing sample data (often partially observed) age sex groups population data well estimated overall total counts per administrative unit. output_dir directory name output folder disaggregated population proportions population totals automatically saved. class categories variables interest. example, educational level, 'education', 'primary education', 'secondary education', 'tertiary education'.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/spices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) with geospatial covariates. — spices","text":"list data frame objects output files including disaggregated population proportions population totals along corresponding measures uncertainties (lower upper bounds 95-percent credible intervals) demographic characteristic. addition, file containing model performance/model fit evaluation metrics also produced.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/spices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spices: Disaggregating population counts for a single level of demographics (e.g., age groups only or sex group only) with geospatial covariates. — spices","text":"","code":"if (FALSE) data(toydata) classes <- names(toydata %>% dplyr::select(starts_with(\"age_\"))) #> Error in toydata %>% dplyr::select(starts_with(\"age_\")): could not find function \"%>%\" result2 <- spices(df = toydata, output_dir = tempdir(), class = classes) # \\dontrun{} #> Directory C:\\Users\\ccn1r22\\AppData\\Local\\Temp\\RtmpA12aiY already exists. #> Error: object 'classes' not found"},{"path":"https://wpgp.github.io/jollofR/reference/toydata.html","id":null,"dir":"Reference","previous_headings":"","what":"Partially observed country-wide or sub-national demographically structured data by age and sex groups — toydata","title":"Partially observed country-wide or sub-national demographically structured data by age and sex groups — toydata","text":"Artificially generated toy data set comes cross-sectional format unit analysis either administrative unit enumeration area identifiable 'id' variable. 'provides artificial information 3,213 spatially distinct administrative units individuals population grouped 12 mutually exclusive exhaustive age groups. age groups grouped 'male' 'female' groups. data contains total population counts (total) spatial unit also contains missing age sex groups population counts. model first predicts population proportions mising data disaggregates population totals using predicted proportions obtain predicted population counts age sex groups. Note applies demographic groups marital status, race, etc. illustrate use package.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/toydata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partially observed country-wide or sub-national demographically structured data by age and sex groups — toydata","text":"","code":"data(toydata)"},{"path":"https://wpgp.github.io/jollofR/reference/toydata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Partially observed country-wide or sub-national demographically structured data by age and sex groups — toydata","text":"object class \"data.frame\" id Administrative units ids (numeric) administrative units interest x1,x2,x3 samples geospatial covariates (required 'cheesecake' 'slices' functions).  Note covariates identified significantly predict population distribution among  demographic groups. package allows user include number covariates thier datasets. total total population counts disaggregated correspond rowsum age groups sex groups population counts age_1, ..., age_12 correspond partially fully observed number people  corresponding age groups. Note used 12 age groups illustration  package can accomodate number age sex demographic groups. fage_1, ..., fage_12 correspond partially fully observed number females  corresponding age groups. Note used 12 age groups illustration  package can accomodate number age sex demographic groups. mage_1, ..., mage_12 correspond partially fully observed number males  corresponding age groups. Note used 12 age groups illustration  package can accomodate number age sex demographic groups.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/toydata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Partially observed country-wide or sub-national demographically structured data by age and sex groups — toydata","text":"data set artificially created jollof package.","code":""},{"path":"https://wpgp.github.io/jollofR/reference/toydata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Partially observed country-wide or sub-national demographically structured data by age and sex groups — toydata","text":"","code":"data(toydata) names(toydata) #>  [1] \"id\"      \"x1\"      \"x2\"      \"x3\"      \"total\"   \"age_1\"   \"age_2\"   #>  [8] \"age_3\"   \"age_4\"   \"age_5\"   \"age_6\"   \"age_7\"   \"age_8\"   \"age_9\"   #> [15] \"age_10\"  \"age_11\"  \"age_12\"  \"fage_1\"  \"fage_2\"  \"fage_3\"  \"fage_4\"  #> [22] \"fage_5\"  \"fage_6\"  \"fage_7\"  \"fage_8\"  \"fage_9\"  \"fage_10\" \"fage_11\" #> [29] \"fage_12\" \"mage_1\"  \"mage_2\"  \"mage_3\"  \"mage_4\"  \"mage_5\"  \"mage_6\"  #> [36] \"mage_7\"  \"mage_8\"  \"mage_9\"  \"mage_10\" \"mage_11\" \"mage_12\" head(toydata) #>   id        x1        x2        x3 total age_1 age_2 age_3 age_4 age_5 age_6 #> 1  1 0.5108491 0.5202009 0.3148000  4132    NA    NA    NA    NA    NA    NA #> 2  2 0.4646444 0.6100449 0.1927605  5443    NA    NA    NA    NA    NA    NA #> 3  3 0.3253992 0.4715522 0.5539218  6355    NA    NA    NA    NA    NA    NA #> 4  4 0.3963392 0.6752947 0.5494017  5647    NA    NA    NA    NA    NA    NA #> 5  5 0.4253325 0.7066313 0.6955719  6065   803   765   795   760   565   764 #> 6  6 0.5800898 0.4553292 0.9862218  7331   910   908  1012   940   683   907 #>   age_7 age_8 age_9 age_10 age_11 age_12 fage_1 fage_2 fage_3 fage_4 fage_5 #> 1    NA    NA    NA     NA     NA     NA     NA     NA     NA     NA     NA #> 2    NA    NA    NA     NA     NA     NA     NA     NA     NA     NA     NA #> 3    NA    NA    NA     NA     NA     NA     NA     NA     NA     NA     NA #> 4    NA    NA    NA     NA     NA     NA     NA     NA     NA     NA     NA #> 5   582   387   249    188    125     82    337    352    398    448    350 #> 6   683   467   323    257    150     91    428    381    405    470    348 #>   fage_6 fage_7 fage_8 fage_9 fage_10 fage_11 fage_12 mage_1 mage_2 mage_3 #> 1     NA     NA     NA     NA      NA      NA      NA     NA     NA     NA #> 2     NA     NA     NA     NA      NA      NA      NA     NA     NA     NA #> 3     NA     NA     NA     NA      NA      NA      NA     NA     NA     NA #> 4     NA     NA     NA     NA      NA      NA      NA     NA     NA     NA #> 5    329    285    174    115      94      66      48    466    413    397 #> 6    463    335    210    184     111      68      56    482    527    607 #>   mage_4 mage_5 mage_6 mage_7 mage_8 mage_9 mage_10 mage_11 mage_12 #> 1     NA     NA     NA     NA     NA     NA      NA      NA      NA #> 2     NA     NA     NA     NA     NA     NA      NA      NA      NA #> 3     NA     NA     NA     NA     NA     NA      NA      NA      NA #> 4     NA     NA     NA     NA     NA     NA      NA      NA      NA #> 5    312    215    435    297    213    134      94      59      34 #> 6    470    335    444    348    257    139     146      82      35"},{"path":"https://wpgp.github.io/jollofR/news/index.html","id":"jollofr-030","dir":"Changelog","previous_headings":"","what":"jollofR 0.3.0","title":"jollofR 0.3.0","text":"Initial CRAN submission.","code":""}]
